name: AI-Powered Feature Suggestion Generator

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allow manual triggering

# Set permissions for the workflow
permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  generate-improvement-suggestions:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for better analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm install axios
      
      - name: Generate AI-powered feature suggestions
        id: generate-suggestions
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node .github/scripts/generate-suggestions.js
      
      - name: Create advanced feature suggestion issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            try {
              // Check if we should skip issue creation due to duplicates
              const skipFile = '.github/skip-issue-creation.txt';
              if (fs.existsSync(skipFile)) {
                console.log('‚è≠Ô∏è Skipping issue creation - similar issues already exist');
                fs.unlinkSync(skipFile); // Clean up the flag file
                return;
              }
              
              const suggestions = fs.readFileSync('.github/suggestions.txt', 'utf8');
              
              if (suggestions.trim()) {
                // Create the issue with enhanced labeling
                const issue = await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `üöÄ AI-Powered Feature Suggestions - ${new Date().toISOString().split('T')[0]}`,
                  body: `<!-- This issue was generated by our enhanced AI feature suggestion system -->
                  
${suggestions}

---

**About this issue:**
This issue was generated by our advanced AI system that analyzes the current AI Code Review Tool codebase and suggests innovative features to level up the project. The suggestions focus on:

- ü§ñ Real AI integration with modern APIs
- üéØ Advanced code analysis capabilities  
- üöÄ Professional-grade developer features
- üí° Innovative capabilities that set this tool apart
- üîß Technical implementation guidance

Each suggestion includes detailed technical approaches, code examples, and integration points with the existing codebase.`,
                  labels: ['ai-suggestions', 'enhancement', 'feature-request', 'high-priority']
                });
                
                console.log(`‚úÖ Created advanced feature suggestion issue #${issue.data.number}`);
                
                // Try to assign relevant maintainers
                try {
                  await github.rest.issues.addAssignees({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.data.number,
                    assignees: ['github-copilot']
                  });
                  
                  console.log('‚úÖ Assigned GitHub Copilot to the issue');
                } catch (assignError) {
                  console.log('‚ö†Ô∏è Could not assign GitHub Copilot (this is normal if Copilot is not available)');
                }
                
              } else {
                console.log('‚ùå No suggestions generated');
              }
            } catch (error) {
              console.error('Error creating issue:', error);
            } 